@{
    ViewData["Title"] = "Home Page";
}
@{
    Layout = null;
}



<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tela principal</title>
    <link rel="stylesheet" href="/css/index.css" asp-append-version="true">

    <!-- Trazer os links dos icones -->
    <script src="https://kit.fontawesome.com/7c72460651.js" crossorigin="anonymous"></script>
</head>

<body>
    <main>
        <header class="header">
            <a href="#">
                <img class="logo-header" src="./img/oficial-logo2.png" alt="">
            </a>

            <nav class="navbar">
                <a href="@Url.Action("MapPet", "Map")" class="active">ENCONTRE SEU PET</a>
                <a href="@Url.Action("Adoption", "PetAdoption")" class="active">ADOTE</a>
                <a href="@Url.Action("Adoption", "PetAdoption", new { tipo = "Cachorro", idade = 3 })">CÃES E FILHOTES</a>
                <a href="@Url.Action("Adoption", "PetAdoption", new { tipo = "Outros" })">
                    OUTROS TIPOS DE ANIMAIS
                </a>
                <a href="@Url.Action("About", "About")" class="active">SOBRE</a>
            </nav>

            <div class="mobile-controls">
                @if (User.Identity.IsAuthenticated)
                {
                    <!-- Botão para redirecionar ao perfil -->
                    <a href="@Url.Action("Profile", "Account")" class="btn" id="accountBtn">
                        <span class="textBtn">Perfil</span>
                        <span>
                            <i class="fa-solid fa-user" id="iconNormal"></i>
                            <i class="fa-solid fa-user fa-xs" id="xsIcon"></i>
                        </span>
                    </a>
                }
                else
                {
                    <!-- Botão para usuários não logados -->
                    <a href="@Url.Action("LoginAndRegister", "Account")" class="btn" id="loginBtn">
                        <span class="textBtn">Faça Login</span>
                        <span>
                            <i class="fa-solid fa-user" id="iconNormal"></i>
                            <i class="fa-solid fa-user fa-xs" id="xsIcon"></i>
                        </span>
                    </a>
                }
                <button class="hamburguer"></button>
            </div>

        </header>




        <div class="background-pet">
            <p>Encontre um amigo.</p>
        </div>

        <div class="container">
            <form method="get" action="@Url.Action("Adoption", "PetAdoption")" class="background-cont__input" style="display:flex;align-items:center;">
                <input class="inputs" id="input1" name="tipo" type="text" placeholder="Digite 'Cachorro' ou 'Gato'">
                <div class="elemento-com-linha"></div>
                <input class="inputs" id="input2" name="sexo" type="text" placeholder="Digite 'Macho' ou 'Fêmea'">
                <button class="button" type="submit">
                    <i class="fa-solid fa-magnifying-glass"></i>
                </button>
            </form>
        </div>


        <ul class="cards-options">
            <li>
                <a href="@Url.Action("Adoption", "PetAdoption", new { tipo = "Cachorro" })">
                    <i class="fa-solid fa-dog fa-3x"></i>
                    Cachorros
                </a>
            </li>
            <li>
                <a href="@Url.Action("Adoption", "PetAdoption", new { tipo = "Gato" })">
                    <i class="fa-solid fa-cat fa-3x"></i>
                    Gatos
                </a>
            </li>
            <li>
                <a href="@Url.Action("Adoption", "PetAdoption", new { tipo = "Outros" })">
                    <i class="fa-solid fa-cat fa-3x"></i>
                    Outros animais
                </a>
            </li>
            <li>
                <i class="fa-solid fa-house-flag fa-3x"></i>
                Resgates e abrigos
            </li>
        </ul>

        <section class="recommended-section">
            <div class="recommended-card">
                <h1>Pets próximos disponíveis para adoção </h1>
                <i class="fa-solid fa-angle-right"></i>
            </div>
            <div class="container-grid-recommended">
                <div class="grid-options">
                    @foreach (var pet in ((IEnumerable<PetSaver.Models.Pets>)ViewBag.PetsParaAdocao).Take(3))
                    {
                        <a href="@Url.Action("Adoption", "PetAdoption")" class="card" style="text-decoration:none; color:inherit;">
                            <img class="img" src="@Url.Content(pet.ImagemUrl.StartsWith("/") ? pet.ImagemUrl : $"/{pet.ImagemUrl}")" alt="Foto do Pet">
                            <div class="legend-before">
                                <div class="legend legend4">
                                    <h1>Olá, venha me adotar!</h1>
                                </div>
                            </div>
                        </a>
                    }


                    <!-- Card extra para "ver mais" -->
                    <div class="card card-4">
                        <div class="legend legend4">
                            <i class="fa-solid fa-paw fa-4x" style="color: #ffffff;"></i>
                            <p>Mais animais disponíveis</p>
                        </div>
                        <div class="view-more">
                            <hr style="border: 1px solid rgb(255, 255, 255); width: 100%;">
                            <form method="get" action="@Url.Action("Adoption", "PetAdoption")" style="display:inline;">
                                <button type="submit" style="background:none; border:none; color:inherit; cursor:pointer; padding:0; font:inherit; margin-top:12px;">
                                    Ver mais
                                </button>

                            </form>
                        </div>
                    </div>

                </div>
            </div>
        </section>


        <section class="planning-adopt">
            <div class="planning-adopt__text">
                <h1>PLANEJANDO ADOTAR UM ANIMAL DE ESTIMAÇÃO?</h1>
            </div>

            <div class="planning-adopt__cards">
                <a href="">
                    <div class="planning-adopt__card-i card1">
                        <i class="fa-solid fa-house-flag fa-4x"></i>
                        <div class="planning-text">
                            <h2>DICAS PARA NOVOS DONOS</h2>
                            <p>Faça com que a transição para a adoção seja a mais tranquila possível.</p>
                        </div>
                        <div class="button-adopt">
                            <a href="@Url.Action("AboutNewOwner", "About")" class="button-link">
                                SABER MAIS
                            </a>
                        </div>

                    </div>
                </a>
                <a href="">
                    <div class="planning-adopt__card-i card2">
                        <i class="fa-solid fa-dog fa-4x"></i>
                        <div class="planning-text">
                            <h2>QUANTOS ANOS TEM UM CÃO EM ANOS HUMANOS?</h2>
                            <p>Qual é a idade de um cachorro em anos humanos?</p>
                        </div>
                        <div class="button-adopt">
                            <a href="@Url.Action("DogAge", "About")" class="button-link">
                                SABER MAIS
                            </a>
                        </div>
                    </div>
                </a>
            </div>

        </section>

    </main>



    <footer class="footer">
        © 2025 BuscaPet. Todos os direitos reservados.
    </footer>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const input1 = document.getElementById("input1");
            const input2 = document.getElementById("input2");

            // Opções para o primeiro input
            const optionsInput1 = ["Cachorro", "Gato"];
            // Opções para o segundo input
            const optionsInput2 = ["Macho", "Fêmea"];

            // Função para criar sugestões dinâmicas
            function autocomplete(input, options) {
                input.addEventListener("input", function () {
                    const value = this.value.toLowerCase();
                    const suggestions = options.filter(option =>
                        option.toLowerCase().startsWith(value)
                    );

                    // Remove sugestões anteriores
                    let datalist = document.getElementById(`${input.id}-datalist`);
                    if (datalist) {
                        datalist.remove();
                    }

                    // Cria uma nova lista de sugestões
                    datalist = document.createElement("ul");
                    datalist.id = `${input.id}-datalist`;
                    datalist.style.position = "absolute";
                    datalist.style.backgroundColor = "#fff";
                    datalist.style.border = "1px solid #ccc";
                    datalist.style.listStyle = "none";
                    datalist.style.padding = "5px";
                    datalist.style.margin = "0";
                    datalist.style.width = `${input.offsetWidth}px`;
                    datalist.style.zIndex = "1000";

                    suggestions.forEach(suggestion => {
                        const item = document.createElement("li");
                        item.textContent = suggestion;
                        item.style.padding = "5px";
                        item.style.cursor = "pointer";

                        // Evento de clique para preencher o input
                        item.addEventListener("click", function () {
                            input.value = suggestion;
                            datalist.remove();
                        });

                        datalist.appendChild(item);
                    });

                    // Adiciona a lista de sugestões ao DOM
                    input.parentNode.appendChild(datalist);
                });

                // Remove a lista de sugestões ao perder o foco
                input.addEventListener("blur", function () {
                    setTimeout(() => {
                        const datalist = document.getElementById(`${input.id}-datalist`);
                        if (datalist) {
                            datalist.remove();
                        }
                    }, 100);
                });
            }

            // Ativa o autocomplete nos inputs
            autocomplete(input1, optionsInput1);
            autocomplete(input2, optionsInput2);
        });

    </script>
</body>

</html>
